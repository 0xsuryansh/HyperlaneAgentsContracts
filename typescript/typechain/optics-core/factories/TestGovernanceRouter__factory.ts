/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestGovernanceRouter,
  TestGovernanceRouterInterface,
} from "../TestGovernanceRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_localDomain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_recoveryTimelock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recoveryManager",
        type: "address",
      },
    ],
    name: "ExitRecovery",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recoveryManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "recoveryActiveAt",
        type: "uint256",
      },
    ],
    name: "InitiateRecovery",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previousRouter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "SetRouter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "previousGovernorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newGovernorDomain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "previousGovernor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newGovernor",
        type: "address",
      },
    ],
    name: "TransferGovernor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousRecoveryManager",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newRecoveryManager",
        type: "address",
      },
    ],
    name: "TransferRecoveryManager",
    type: "event",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct GovernanceRouter.Call[]",
        name: "_calls",
        type: "tuple[]",
      },
    ],
    name: "_dispatchCalls",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_newRouter",
        type: "address",
      },
    ],
    name: "_setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_newDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_newGovernor",
        type: "address",
      },
    ],
    name: "_transferGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct GovernanceRouter.Call[]",
        name: "_calls",
        type: "tuple[]",
      },
    ],
    name: "callLocal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destination",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct GovernanceRouter.Call[]",
        name: "_calls",
        type: "tuple[]",
      },
    ],
    name: "callRemote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "containsDomain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domains",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exitRecovery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governorDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_origin",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "handle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "inRecovery",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_xAppConnectionManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recoveryManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initiateRecoveryTimelock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recoveryActiveAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recoveryManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recoveryTimelock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "routers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouterAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouterLocal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_xAppConnectionManager",
        type: "address",
      },
    ],
    name: "setXAppConnectionManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "testSetRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_newDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_newGovernor",
        type: "address",
      },
    ],
    name: "transferGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRecoveryManager",
        type: "address",
      },
    ],
    name: "transferRecoveryManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "xAppConnectionManager",
    outputs: [
      {
        internalType: "contract XAppConnectionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620027d8380380620027d8833981016040819052620000349162000050565b5060e01b6001600160e01b031916608052603260a05262000087565b6000806040838503121562000063578182fd5b825163ffffffff8116811462000077578283fd5b6020939093015192949293505050565b60805160e01c60a051612716620000c26000398061053b5280610e0d5250806107fa528061086a5280610e745280611bc852506127166000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063670a43c4116100f9578063db2021ae11610097578063e6b3d94911610071578063e6b3d9491461036d578063e833a15814610380578063f05151df14610393578063ffa1ad741461039b576101c4565b8063db2021ae1461034a578063de314b191461035d578063e542929814610365576101c4565b8063a453193d116100d3578063a453193d146102fe578063c3ef213414610311578063c427764114610324578063d8e7923714610337576101c4565b8063670a43c4146102ce5780636c3a2dbc146102e35780638d3638f4146102f6576101c4565b8063485cc9551161016657806356d5d4751161014057806356d5d4751461028057806356f7e2981461029357806363706be3146102b357806366cf8fab146102bb576101c4565b8063485cc955146102455780634f1efda3146102585780635585416c1461026b576101c4565b8063316c92b6116101a2578063316c92b61461020f5780633339df96146102175780633574de291461021f57806341bdc8b514610232576101c4565b80630c340a24146101c95780632ac095dc146101e75780632ead72f6146101fc575b600080fd5b6101d16103b0565b6040516101de9190612100565b60405180910390f35b6101fa6101f5366004611ef8565b6103cc565b005b6101d161020a366004611fe5565b610443565b6101fa61046b565b6101d16105b9565b6101fa61022d36600461201d565b6105d5565b6101fa610240366004611e64565b610618565b6101fa610253366004611e80565b610712565b6101fa61026636600461201d565b6109a1565b610273610ae0565b6040516101de919061250c565b6101fa61028e36600461208d565b610b04565b6102a66102a1366004611fe5565b610c85565b6040516101de919061229d565b6101fa610cee565b6102736102c9366004611fcd565b610dd1565b6102d6610e0b565b6040516101de9190612503565b6101fa6102f136600461201d565b610e2f565b610273610e72565b6101fa61030c36600461201d565b610e96565b6101fa61031f36600461201d565b61060e565b6101fa61033236600461203a565b610ede565b6101fa61034536600461201d565b611132565b6101fa61035836600461201d565b6111e0565b6101d161133e565b6102d661135a565b6101fa61037b366004611e64565b611360565b6101fa61038e366004611eb8565b61143f565b6102a6611535565b6103a3611556565b6040516101de91906125db565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b33301461040e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610405906122a8565b60405180910390fd5b60005b815181101561043f5761043682828151811061042957fe5b602002602001015161155b565b50600101610411565b5050565b60056020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b610473611535565b156104aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610405906123f0565b60025473ffffffffffffffffffffffffffffffffffffffff1633146104fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040590612495565b60015415610535576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040590612427565b61055f427f0000000000000000000000000000000000000000000000000000000000000000611610565b600181905560025460405173ffffffffffffffffffffffffffffffffffffffff909116917f4c75781638d2c3a22c08e1295107f831b97683d017a1145733b743479a2ae225916105af9190612503565b60405180910390a2565b60045473ffffffffffffffffffffffffffffffffffffffff1681565b33301461060e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610405906122a8565b61043f828261168b565b610620611535565b61067a5760035473ffffffffffffffffffffffffffffffffffffffff163314610675576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040590612316565b6106cb565b60025473ffffffffffffffffffffffffffffffffffffffff1633146106cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040590612495565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600054610100900460ff168061072b575061072b61179e565b80610739575060005460ff16155b61078e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806126b3602e913960400191505060405180910390fd5b600054610100900460ff161580156107f457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b3361081f7f0000000000000000000000000000000000000000000000000000000000000000826117af565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff851617905561086884610618565b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638d3638f46040518163ffffffff1660e01b815260040160206040518083038186803b1580156108f757600080fd5b505afa15801561090b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092f9190612001565b63ffffffff161461096c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040590612384565b50801561099c57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b505050565b60035473ffffffffffffffffffffffffffffffffffffffff1633146109f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040590612316565b6109fa611535565b15610a31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610405906123f0565b610a3b828261168b565b6000633574de2960e01b8383604051602401610a5892919061251d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152905061099c816118e6565b60035474010000000000000000000000000000000000000000900463ffffffff1681565b600480546040517f5190bc5300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911691635190bc5391610b5991339101612100565b60206040518083038186803b158015610b7157600080fd5b505afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba99190611f91565b610bdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610405906123b9565b82610be983611ae0565b610bf38282611ae3565b610c29576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104059061234d565b6040513090610c399085906120e4565b6000604051808303816000865af19150503d8060008114610c76576040519150601f19603f3d011682016040523d82523d6000602084013e610c7b565b606091505b5050505050505050565b6000805b600654811015610ce3578263ffffffff1660068281548110610ca757fe5b6000918252602090912060088204015460079091166004026101000a900463ffffffff161415610cdb576001915050610ce9565b600101610c89565b50600090505b919050565b60025473ffffffffffffffffffffffffffffffffffffffff163314610d3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040590612495565b600154610d78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610405906122df565b60006001556002546040517f5397c02652a688dd1cac8544f233b3daaf96d7a9f974af80b70ab1538359e26191610dc79173ffffffffffffffffffffffffffffffffffffffff90911690612100565b60405180910390a1565b60068181548110610de157600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b333014610e68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610405906122a8565b61043f82826117af565b7f000000000000000000000000000000000000000000000000000000000000000081565b610ea0828261168b565b60007f3574de290000000000000000000000000000000000000000000000000000000083610ecd84611b4a565b604051602401610a58929190612549565b60035473ffffffffffffffffffffffffffffffffffffffff163314610f2f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040590612316565b610f37611535565b15610f6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610405906123f0565b6000610f7984611b63565b90506000632ac095dc60e01b8484604051602401610f98929190612148565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909516949094179093526004805482517f9fa92f9d000000000000000000000000000000000000000000000000000000008152925193955073ffffffffffffffffffffffffffffffffffffffff1693639fa92f9d938383019391929091829003018186803b15801561107d57600080fd5b505afa158015611091573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b59190611fb1565b73ffffffffffffffffffffffffffffffffffffffff1663fa31de01866110da85611b4a565b846040518463ffffffff1660e01b81526004016110f99392919061255f565b600060405180830381600087803b15801561111357600080fd5b505af1158015611127573d6000803e3d6000fd5b505050505050505050565b61113a611535565b61118f5760035473ffffffffffffffffffffffffffffffffffffffff16331461031f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040590612316565b60025473ffffffffffffffffffffffffffffffffffffffff16331461060e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040590612495565b60035473ffffffffffffffffffffffffffffffffffffffff163314611231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040590612316565b611239611535565b15611270576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610405906123f0565b61127a82826117af565b600061128583611bc6565b90508015611293575061043f565b6000636c3a2dbc60e01b84846040516024016112b092919061251d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091529050611338816118e6565b50505050565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60025473ffffffffffffffffffffffffffffffffffffffff1633146113b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040590612495565b60025460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f3b3f758030fa296b85e15008f79cd22af8ffd2a7dd360d8963dcaf8e9fa2b5ff90600090a3600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b611447611535565b6114a15760035473ffffffffffffffffffffffffffffffffffffffff16331461149c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040590612316565b6114f2565b60025473ffffffffffffffffffffffffffffffffffffffff1633146114f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040590612495565b60005b8181101561099c5761152c83838381811061150c57fe5b905060200281019061151e91906125e9565b61152790612640565b61155b565b506001016114f5565b60015460009080158015904283111590829061154e5750805b935050505090565b600081565b60606000826000015173ffffffffffffffffffffffffffffffffffffffff16836020015160405161158c91906120e4565b6000604051808303816000865af19150503d80600081146115c9576040519150601f19603f3d011682016040523d82523d6000602084013e6115ce565b606091505b50925090508061160a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104059061245e565b50919050565b60008282018381101561168457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b63ffffffff82166000818152600560205260409081902054905173ffffffffffffffffffffffffffffffffffffffff90911691907fe831dfe42cf5696062b6f5aebf3ea5ed90afeeccd33e5eec53d55b12aa45097d906116ee9084908690612121565b60405180910390a273ffffffffffffffffffffffffffffffffffffffff82166117205761171a83611bf5565b5061043f565b73ffffffffffffffffffffffffffffffffffffffff81166117445761174483611cbf565b5063ffffffff82166000908152600560205260409020805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff00000000000000000000000000000000000000009091161790555050565b60006117a930611d1f565b15905090565b60006117ba83611bc6565b9050806117cc576117ca83611b63565b505b6000816117da5760006117dc565b825b60035460405191925073ffffffffffffffffffffffffffffffffffffffff80841692908216917f4daaa39e87dee84708195369c30e97baa0665dc8562ac10535a0f3a9329943aa9161184e9174010000000000000000000000000000000000000000900463ffffffff169089906125c4565b60405180910390a36003805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff000000000000000000000000000000000000000063ffffffff90961674010000000000000000000000000000000000000000027fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff9093169290921794909416179092555050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639fa92f9d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561195057600080fd5b505afa158015611964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119889190611fb1565b905060005b60065481101561099c57600063ffffffff16600682815481106119ac57fe5b6000918252602090912060088204015460079091166004026101000a900463ffffffff1614611ad8578173ffffffffffffffffffffffffffffffffffffffff1663fa31de01600683815481106119fe57fe5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16611a866005600060068781548110611a3857fe5b6000918252602080832060088304015460079092166004026101000a90910463ffffffff16835282019290925260400190205473ffffffffffffffffffffffffffffffffffffffff16611b4a565b866040518463ffffffff1660e01b8152600401611aa59392919061255f565b600060405180830381600087803b158015611abf57600080fd5b505af1158015611ad3573d6000803e3d6000fd5b505050505b60010161198d565b90565b60035460009063ffffffff848116740100000000000000000000000000000000000000009092041614801561168457505063ffffffff9190911660009081526005602052604090205473ffffffffffffffffffffffffffffffffffffffff90811691161490565b73ffffffffffffffffffffffffffffffffffffffff1690565b63ffffffff811660009081526005602052604090205473ffffffffffffffffffffffffffffffffffffffff1680610ce9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610405906124cc565b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff90811691161490565b63ffffffff8116600090815260056020526040812080547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555b60065481101561043f578163ffffffff1660068281548110611c4f57fe5b6000918252602090912060088204015460079091166004026101000a900463ffffffff161415611cb45760068181548110611c8657fe5b90600052602060002090600891828204019190066004026101000a81549063ffffffff021916905550611cbc565b600101611c31565b50565b600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f6008820401805460079092166004026101000a63ffffffff818102199093169390921691909102919091179055565b3b151590565b60008083601f840112611d36578182fd5b50813567ffffffffffffffff811115611d4d578182fd5b6020830191508360208083028501011115611d6757600080fd5b9250929050565b600082601f830112611d7e578081fd5b813567ffffffffffffffff811115611d9257fe5b611dc360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161261c565b818152846020838601011115611dd7578283fd5b816020850160208301379081016020019190915292915050565b600060408284031215611e02578081fd5b6040516040810167ffffffffffffffff8282108183111715611e2057fe5b8160405282935084359150611e348261267e565b90825260208401359080821115611e4a57600080fd5b50611e5785828601611d6e565b6020830152505092915050565b600060208284031215611e75578081fd5b81356116848161267e565b60008060408385031215611e92578081fd5b8235611e9d8161267e565b91506020830135611ead8161267e565b809150509250929050565b60008060208385031215611eca578182fd5b823567ffffffffffffffff811115611ee0578283fd5b611eec85828601611d25565b90969095509350505050565b60006020808385031215611f0a578182fd5b823567ffffffffffffffff80821115611f21578384fd5b818501915085601f830112611f34578384fd5b813581811115611f4057fe5b611f4d848583020161261c565b8181528481019250838501865b83811015611f8357611f718a888435890101611df1565b85529386019390860190600101611f5a565b509098975050505050505050565b600060208284031215611fa2578081fd5b81518015158114611684578182fd5b600060208284031215611fc2578081fd5b81516116848161267e565b600060208284031215611fde578081fd5b5035919050565b600060208284031215611ff6578081fd5b8135611684816126a0565b600060208284031215612012578081fd5b8151611684816126a0565b6000806040838503121561202f578182fd5b8235611e9d816126a0565b60008060006040848603121561204e578081fd5b8335612059816126a0565b9250602084013567ffffffffffffffff811115612074578182fd5b61208086828701611d25565b9497909650939450505050565b6000806000606084860312156120a1578283fd5b83356120ac816126a0565b925060208401359150604084013567ffffffffffffffff8111156120ce578182fd5b6120da86828701611d6e565b9150509250925092565b600082516120f6818460208701612652565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b602080825281810183905260009060408084018583028501820187855b88811015611f83577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18b36030181126121c5578788fd5b8a0180356121d28161267e565b73ffffffffffffffffffffffffffffffffffffffff16845280870135368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe101811261221e578889fd5b8101803567ffffffffffffffff81111561223657898afd5b80360383131561224457898afd5b8789870152808887015260609250808983018488013785810183018a905295880195601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690940101925090850190600101612165565b901515815260200190565b60208082526005908201527f2174686973000000000000000000000000000000000000000000000000000000604082015260600190565b60208082526016908201527f7265636f76657279206e6f7420696e6974696174656400000000000000000000604082015260600190565b60208082526014908201527f212063616c6c656420627920676f7665726e6f72000000000000000000000000604082015260600190565b6020808252600f908201527f21676f7665726e6f72526f757465720000000000000000000000000000000000604082015260600190565b6020808252818101527f58417070436f6e6e656374696f6e4d616e616765722062616420646f6d61696e604082015260600190565b60208082526008908201527f217265706c696361000000000000000000000000000000000000000000000000604082015260600190565b6020808252600b908201527f696e207265636f76657279000000000000000000000000000000000000000000604082015260600190565b6020808252601a908201527f7265636f7665727920616c726561647920696e69746961746564000000000000604082015260600190565b6020808252600b908201527f63616c6c206661696c6564000000000000000000000000000000000000000000604082015260600190565b6020808252601c908201527f212063616c6c6564206279207265636f76657279206d616e6167657200000000604082015260600190565b60208082526007908201527f21726f7574657200000000000000000000000000000000000000000000000000604082015260600190565b90815260200190565b63ffffffff91909116815260200190565b63ffffffff92909216825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b63ffffffff929092168252602082015260400190565b600063ffffffff85168252836020830152606060408301528251806060840152612590816080850160208701612652565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01691909101608001949350505050565b63ffffffff92831681529116602082015260400190565b60ff91909116815260200190565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18336030181126120f6578182fd5b60405181810167ffffffffffffffff8111828210171561263857fe5b604052919050565b600061264c3683611df1565b92915050565b60005b8381101561266d578181015183820152602001612655565b838111156113385750506000910152565b73ffffffffffffffffffffffffffffffffffffffff81168114611cbc57600080fd5b63ffffffff81168114611cbc57600080fdfe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a26469706673582212202cf2ef47219d40fd8bca090c64c9dd94a70a2356f73f65d012ce8bef7775334b64736f6c63430007060033";

export class TestGovernanceRouter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _localDomain: BigNumberish,
    _recoveryTimelock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestGovernanceRouter> {
    return super.deploy(
      _localDomain,
      _recoveryTimelock,
      overrides || {}
    ) as Promise<TestGovernanceRouter>;
  }
  getDeployTransaction(
    _localDomain: BigNumberish,
    _recoveryTimelock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _localDomain,
      _recoveryTimelock,
      overrides || {}
    );
  }
  attach(address: string): TestGovernanceRouter {
    return super.attach(address) as TestGovernanceRouter;
  }
  connect(signer: Signer): TestGovernanceRouter__factory {
    return super.connect(signer) as TestGovernanceRouter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestGovernanceRouterInterface {
    return new utils.Interface(_abi) as TestGovernanceRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestGovernanceRouter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestGovernanceRouter;
  }
}
