/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GovernanceRouter,
  GovernanceRouterInterface,
} from "../GovernanceRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_localDomain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_recoveryTimelock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recoveryManager",
        type: "address",
      },
    ],
    name: "ExitRecovery",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recoveryManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "recoveryActiveAt",
        type: "uint256",
      },
    ],
    name: "InitiateRecovery",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previousRouter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "SetRouter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "previousGovernorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newGovernorDomain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "previousGovernor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newGovernor",
        type: "address",
      },
    ],
    name: "TransferGovernor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousRecoveryManager",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newRecoveryManager",
        type: "address",
      },
    ],
    name: "TransferRecoveryManager",
    type: "event",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct GovernanceRouter.Call[]",
        name: "_calls",
        type: "tuple[]",
      },
    ],
    name: "_dispatchCalls",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_newRouter",
        type: "address",
      },
    ],
    name: "_setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_newDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_newGovernor",
        type: "address",
      },
    ],
    name: "_transferGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct GovernanceRouter.Call[]",
        name: "_calls",
        type: "tuple[]",
      },
    ],
    name: "callLocal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destination",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct GovernanceRouter.Call[]",
        name: "_calls",
        type: "tuple[]",
      },
    ],
    name: "callRemote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domains",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exitRecovery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governorDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_origin",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "handle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "inRecovery",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_xAppConnectionManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recoveryManager",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initiateRecoveryTimelock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recoveryActiveAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recoveryManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recoveryTimelock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "routers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouterLocal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_xAppConnectionManager",
        type: "address",
      },
    ],
    name: "setXAppConnectionManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_newDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_newGovernor",
        type: "address",
      },
    ],
    name: "transferGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRecoveryManager",
        type: "address",
      },
    ],
    name: "transferRecoveryManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "xAppConnectionManager",
    outputs: [
      {
        internalType: "contract XAppConnectionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620026c0380380620026c0833981016040819052620000349162000050565b60e09190911b6001600160e01b03191660805260a05262000087565b6000806040838503121562000063578182fd5b825163ffffffff8116811462000077578283fd5b6020939093015192949293505050565b60805160e01c60a0516125fe620000c2600039806104e15280610d4a5250806107a052806108105280610db15280611ac652506125fe6000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c806366cf8fab116100ee578063db2021ae11610097578063e6b3d94911610071578063e6b3d94914610306578063e833a15814610319578063f05151df1461032c578063ffa1ad7414610341576101a3565b8063db2021ae146102e3578063de314b19146102f6578063e5429298146102fe576101a3565b80638d3638f4116100c85780638d3638f4146102b5578063c4277641146102bd578063d8e79237146102d0576101a3565b806366cf8fab1461027a578063670a43c41461028d5780636c3a2dbc146102a2576101a3565b806341bdc8b5116101505780635585416c1161012a5780635585416c1461024a57806356d5d4751461025f57806363706be314610272576101a3565b806341bdc8b514610211578063485cc955146102245780634f1efda314610237576101a3565b8063316c92b611610181578063316c92b6146101ee5780633339df96146101f65780633574de29146101fe576101a3565b80630c340a24146101a85780632ac095dc146101c65780632ead72f6146101db575b600080fd5b6101b0610356565b6040516101bd9190611ffe565b60405180910390f35b6101d96101d4366004611df6565b610372565b005b6101b06101e9366004611ee3565b6103e9565b6101d9610411565b6101b061055f565b6101d961020c366004611f1b565b61057b565b6101d961021f366004611d62565b6105be565b6101d9610232366004611d7e565b6106b8565b6101d9610245366004611f1b565b610947565b610252610a86565b6040516101bd919061240a565b6101d961026d366004611f8b565b610aaa565b6101d9610c2b565b610252610288366004611ecb565b610d0e565b610295610d48565b6040516101bd9190612401565b6101d96102b0366004611f1b565b610d6c565b610252610daf565b6101d96102cb366004611f38565b610dd3565b6101d96102de366004611f1b565b611027565b6101d96102f1366004611f1b565b6110da565b6101b0611238565b610295611254565b6101d9610314366004611d62565b61125a565b6101d9610327366004611db6565b611339565b61033461142f565b6040516101bd919061219b565b610349611450565b6040516101bd91906124c3565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b3330146103b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab906121a6565b60405180910390fd5b60005b81518110156103e5576103dc8282815181106103cf57fe5b6020026020010151611455565b506001016103b7565b5050565b60056020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61041961142f565b15610450576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab906122ee565b60025473ffffffffffffffffffffffffffffffffffffffff1633146104a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90612393565b600154156104db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90612325565b610505427f000000000000000000000000000000000000000000000000000000000000000061150a565b600181905560025460405173ffffffffffffffffffffffffffffffffffffffff909116917f4c75781638d2c3a22c08e1295107f831b97683d017a1145733b743479a2ae225916105559190612401565b60405180910390a2565b60045473ffffffffffffffffffffffffffffffffffffffff1681565b3330146105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab906121a6565b6103e58282611585565b6105c661142f565b6106205760035473ffffffffffffffffffffffffffffffffffffffff16331461061b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90612214565b610671565b60025473ffffffffffffffffffffffffffffffffffffffff163314610671576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90612393565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600054610100900460ff16806106d157506106d1611698565b806106df575060005460ff16155b610734576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061259b602e913960400191505060405180910390fd5b600054610100900460ff1615801561079a57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b336107c57f0000000000000000000000000000000000000000000000000000000000000000826116a9565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff851617905561080e846105be565b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638d3638f46040518163ffffffff1660e01b815260040160206040518083038186803b15801561089d57600080fd5b505afa1580156108b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d59190611eff565b63ffffffff1614610912576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90612282565b50801561094257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b505050565b60035473ffffffffffffffffffffffffffffffffffffffff163314610998576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90612214565b6109a061142f565b156109d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab906122ee565b6109e18282611585565b6000633574de2960e01b83836040516024016109fe92919061241b565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091529050610942816117e0565b60035474010000000000000000000000000000000000000000900463ffffffff1681565b600480546040517f5190bc5300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911691635190bc5391610aff91339101611ffe565b60206040518083038186803b158015610b1757600080fd5b505afa158015610b2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4f9190611e8f565b610b85576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab906122b7565b82610b8f836119da565b610b9982826119e1565b610bcf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab9061224b565b6040513090610bdf908590611fe2565b6000604051808303816000865af19150503d8060008114610c1c576040519150601f19603f3d011682016040523d82523d6000602084013e610c21565b606091505b5050505050505050565b60025473ffffffffffffffffffffffffffffffffffffffff163314610c7c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90612393565b600154610cb5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab906121dd565b60006001556002546040517f5397c02652a688dd1cac8544f233b3daaf96d7a9f974af80b70ab1538359e26191610d049173ffffffffffffffffffffffffffffffffffffffff90911690611ffe565b60405180910390a1565b60068181548110610d1e57600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b333014610da5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab906121a6565b6103e582826116a9565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035473ffffffffffffffffffffffffffffffffffffffff163314610e24576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90612214565b610e2c61142f565b15610e63576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab906122ee565b6000610e6e84611a48565b90506000632ac095dc60e01b8484604051602401610e8d929190612046565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909516949094179093526004805482517f9fa92f9d000000000000000000000000000000000000000000000000000000008152925193955073ffffffffffffffffffffffffffffffffffffffff1693639fa92f9d938383019391929091829003018186803b158015610f7257600080fd5b505afa158015610f86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610faa9190611eaf565b73ffffffffffffffffffffffffffffffffffffffff1663fa31de0186610fcf85611aab565b846040518463ffffffff1660e01b8152600401610fee93929190612447565b600060405180830381600087803b15801561100857600080fd5b505af115801561101c573d6000803e3d6000fd5b505050505050505050565b61102f61142f565b6110895760035473ffffffffffffffffffffffffffffffffffffffff163314611084576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90612214565b6105b4565b60025473ffffffffffffffffffffffffffffffffffffffff1633146105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90612393565b60035473ffffffffffffffffffffffffffffffffffffffff16331461112b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90612214565b61113361142f565b1561116a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab906122ee565b61117482826116a9565b600061117f83611ac4565b9050801561118d57506103e5565b6000636c3a2dbc60e01b84846040516024016111aa92919061241b565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091529050611232816117e0565b50505050565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60025473ffffffffffffffffffffffffffffffffffffffff1633146112ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90612393565b60025460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f3b3f758030fa296b85e15008f79cd22af8ffd2a7dd360d8963dcaf8e9fa2b5ff90600090a3600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61134161142f565b61139b5760035473ffffffffffffffffffffffffffffffffffffffff163314611396576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90612214565b6113ec565b60025473ffffffffffffffffffffffffffffffffffffffff1633146113ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90612393565b60005b818110156109425761142683838381811061140657fe5b905060200281019061141891906124d1565b61142190612528565b611455565b506001016113ef565b6001546000908015801590428311159082906114485750805b935050505090565b600081565b60606000826000015173ffffffffffffffffffffffffffffffffffffffff1683602001516040516114869190611fe2565b6000604051808303816000865af19150503d80600081146114c3576040519150601f19603f3d011682016040523d82523d6000602084013e6114c8565b606091505b509250905080611504576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab9061235c565b50919050565b60008282018381101561157e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b63ffffffff82166000818152600560205260409081902054905173ffffffffffffffffffffffffffffffffffffffff90911691907fe831dfe42cf5696062b6f5aebf3ea5ed90afeeccd33e5eec53d55b12aa45097d906115e8908490869061201f565b60405180910390a273ffffffffffffffffffffffffffffffffffffffff821661161a5761161483611af3565b506103e5565b73ffffffffffffffffffffffffffffffffffffffff811661163e5761163e83611bbd565b5063ffffffff82166000908152600560205260409020805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff00000000000000000000000000000000000000009091161790555050565b60006116a330611c1d565b15905090565b60006116b483611ac4565b9050806116c6576116c483611a48565b505b6000816116d45760006116d6565b825b60035460405191925073ffffffffffffffffffffffffffffffffffffffff80841692908216917f4daaa39e87dee84708195369c30e97baa0665dc8562ac10535a0f3a9329943aa916117489174010000000000000000000000000000000000000000900463ffffffff169089906124ac565b60405180910390a36003805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff000000000000000000000000000000000000000063ffffffff90961674010000000000000000000000000000000000000000027fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff9093169290921794909416179092555050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639fa92f9d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561184a57600080fd5b505afa15801561185e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118829190611eaf565b905060005b60065481101561094257600063ffffffff16600682815481106118a657fe5b6000918252602090912060088204015460079091166004026101000a900463ffffffff16146119d2578173ffffffffffffffffffffffffffffffffffffffff1663fa31de01600683815481106118f857fe5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16611980600560006006878154811061193257fe5b6000918252602080832060088304015460079092166004026101000a90910463ffffffff16835282019290925260400190205473ffffffffffffffffffffffffffffffffffffffff16611aab565b866040518463ffffffff1660e01b815260040161199f93929190612447565b600060405180830381600087803b1580156119b957600080fd5b505af11580156119cd573d6000803e3d6000fd5b505050505b600101611887565b805b919050565b60035460009063ffffffff848116740100000000000000000000000000000000000000009092041614801561157e57505063ffffffff9190911660009081526005602052604090205473ffffffffffffffffffffffffffffffffffffffff90811691161490565b63ffffffff811660009081526005602052604090205473ffffffffffffffffffffffffffffffffffffffff16806119dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab906123ca565b73ffffffffffffffffffffffffffffffffffffffff1690565b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff90811691161490565b63ffffffff8116600090815260056020526040812080547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555b6006548110156103e5578163ffffffff1660068281548110611b4d57fe5b6000918252602090912060088204015460079091166004026101000a900463ffffffff161415611bb25760068181548110611b8457fe5b90600052602060002090600891828204019190066004026101000a81549063ffffffff021916905550611bba565b600101611b2f565b50565b600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f6008820401805460079092166004026101000a63ffffffff818102199093169390921691909102919091179055565b3b151590565b60008083601f840112611c34578182fd5b50813567ffffffffffffffff811115611c4b578182fd5b6020830191508360208083028501011115611c6557600080fd5b9250929050565b600082601f830112611c7c578081fd5b813567ffffffffffffffff811115611c9057fe5b611cc160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612504565b818152846020838601011115611cd5578283fd5b816020850160208301379081016020019190915292915050565b600060408284031215611d00578081fd5b6040516040810167ffffffffffffffff8282108183111715611d1e57fe5b8160405282935084359150611d3282612566565b90825260208401359080821115611d4857600080fd5b50611d5585828601611c6c565b6020830152505092915050565b600060208284031215611d73578081fd5b813561157e81612566565b60008060408385031215611d90578081fd5b8235611d9b81612566565b91506020830135611dab81612566565b809150509250929050565b60008060208385031215611dc8578182fd5b823567ffffffffffffffff811115611dde578283fd5b611dea85828601611c23565b90969095509350505050565b60006020808385031215611e08578182fd5b823567ffffffffffffffff80821115611e1f578384fd5b818501915085601f830112611e32578384fd5b813581811115611e3e57fe5b611e4b8485830201612504565b8181528481019250838501865b83811015611e8157611e6f8a888435890101611cef565b85529386019390860190600101611e58565b509098975050505050505050565b600060208284031215611ea0578081fd5b8151801515811461157e578182fd5b600060208284031215611ec0578081fd5b815161157e81612566565b600060208284031215611edc578081fd5b5035919050565b600060208284031215611ef4578081fd5b813561157e81612588565b600060208284031215611f10578081fd5b815161157e81612588565b60008060408385031215611f2d578182fd5b8235611d9b81612588565b600080600060408486031215611f4c578081fd5b8335611f5781612588565b9250602084013567ffffffffffffffff811115611f72578182fd5b611f7e86828701611c23565b9497909650939450505050565b600080600060608486031215611f9f578283fd5b8335611faa81612588565b925060208401359150604084013567ffffffffffffffff811115611fcc578182fd5b611fd886828701611c6c565b9150509250925092565b60008251611ff481846020870161253a565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b602080825281810183905260009060408084018583028501820187855b88811015611e81577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18b36030181126120c3578788fd5b8a0180356120d081612566565b73ffffffffffffffffffffffffffffffffffffffff16845280870135368290037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe101811261211c578889fd5b8101803567ffffffffffffffff81111561213457898afd5b80360383131561214257898afd5b8789870152808887015260609250808983018488013785810183018a905295880195601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690940101925090850190600101612063565b901515815260200190565b60208082526005908201527f2174686973000000000000000000000000000000000000000000000000000000604082015260600190565b60208082526016908201527f7265636f76657279206e6f7420696e6974696174656400000000000000000000604082015260600190565b60208082526014908201527f212063616c6c656420627920676f7665726e6f72000000000000000000000000604082015260600190565b6020808252600f908201527f21676f7665726e6f72526f757465720000000000000000000000000000000000604082015260600190565b6020808252818101527f58417070436f6e6e656374696f6e4d616e616765722062616420646f6d61696e604082015260600190565b60208082526008908201527f217265706c696361000000000000000000000000000000000000000000000000604082015260600190565b6020808252600b908201527f696e207265636f76657279000000000000000000000000000000000000000000604082015260600190565b6020808252601a908201527f7265636f7665727920616c726561647920696e69746961746564000000000000604082015260600190565b6020808252600b908201527f63616c6c206661696c6564000000000000000000000000000000000000000000604082015260600190565b6020808252601c908201527f212063616c6c6564206279207265636f76657279206d616e6167657200000000604082015260600190565b60208082526007908201527f21726f7574657200000000000000000000000000000000000000000000000000604082015260600190565b90815260200190565b63ffffffff91909116815260200190565b63ffffffff92909216825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b600063ffffffff8516825283602083015260606040830152825180606084015261247881608085016020870161253a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01691909101608001949350505050565b63ffffffff92831681529116602082015260400190565b60ff91909116815260200190565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc1833603018112611ff4578182fd5b60405181810167ffffffffffffffff8111828210171561252057fe5b604052919050565b60006125343683611cef565b92915050565b60005b8381101561255557818101518382015260200161253d565b838111156112325750506000910152565b73ffffffffffffffffffffffffffffffffffffffff81168114611bba57600080fd5b63ffffffff81168114611bba57600080fdfe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a26469706673582212200c6ce4253252f3a0975e2fb813e1a37d457ca8b1ac0637d215f06e7c26bc40f264736f6c63430007060033";

export class GovernanceRouter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _localDomain: BigNumberish,
    _recoveryTimelock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GovernanceRouter> {
    return super.deploy(
      _localDomain,
      _recoveryTimelock,
      overrides || {}
    ) as Promise<GovernanceRouter>;
  }
  getDeployTransaction(
    _localDomain: BigNumberish,
    _recoveryTimelock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _localDomain,
      _recoveryTimelock,
      overrides || {}
    );
  }
  attach(address: string): GovernanceRouter {
    return super.attach(address) as GovernanceRouter;
  }
  connect(signer: Signer): GovernanceRouter__factory {
    return super.connect(signer) as GovernanceRouter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceRouterInterface {
    return new utils.Interface(_abi) as GovernanceRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernanceRouter {
    return new Contract(address, _abi, signerOrProvider) as GovernanceRouter;
  }
}
