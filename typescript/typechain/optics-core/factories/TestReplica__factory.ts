/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestReplica, TestReplicaInterface } from "../TestReplica";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_localDomain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
    ],
    name: "NewUpdater",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "homeDomain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "acceptableRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "confirmAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "homeDomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_remoteDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_updateRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_updateIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_optimisticSeconds",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestUpdateIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum Replica.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optimisticSeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "process",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "prove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "remoteDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setFailed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "setMessagePending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_remoteDomain",
        type: "uint32",
      },
    ],
    name: "setRemoteDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "setUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
    ],
    name: "setUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum Common.States",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "testBranchRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "testHomeDomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testProcess",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updater",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051612d56380380612d568339818101604052606081101561003357600080fd5b50516001600160e01b031960e082901b16608052620cf85060a0819052613a9860c081905263ffffffff90921691612cbe6100986000398061098e52806110f05250806110cf52806111c752806116de525080610e4b5280610e9f5250612cbe6000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638d3638f411610104578063a3f81d68116100a2578063d88beda211610071578063d88beda21461077e578063df034cd014610786578063f2fde38b1461078e578063ffa1ad74146107c1576101cf565b8063a3f81d68146106ab578063b61c19e8146106c8578063b80777ea1461076e578063c19d93fb14610776576101cf565b8063961681dc116100de578063961681dc146105a057806396ae1a89146105a85780639868a2731461064e5780639d54f41914610678576101cf565b80638d3638f4146104a85780638da5cb5b146104c9578063928bc4b2146104fa576101cf565b806345630b1a116101715780636188af0e1161014b5780636188af0e14610323578063647d2a83146103d157806371bfb7b8146103d95780637e90d860146103f6576101cf565b806345630b1a146102f05780635146366e146102f857806351d7bcd714610300576101cf565b80632bbd59ca116101ad5780632bbd59ca14610249578063371d30711461028757806339992668146102c557806342ed3fd3146102cd576101cf565b8063146901db146101d4578063200f0260146101de57806325e3beda1461022f575b600080fd5b6101dc6107df565b005b6101dc600480360360a08110156101f457600080fd5b5063ffffffff8135169073ffffffffffffffffffffffffffffffffffffffff60208201351690604081013590606081013590608001356107e9565b61023761098c565b60408051918252519081900360200190f35b6102666004803603602081101561025f57600080fd5b50356109b0565b6040518082600281111561027657fe5b815260200191505060405180910390f35b6102b1600480360361044081101561029e57600080fd5b50803590602081019061042001356109c5565b604080519115158252519081900360200190f35b610237610ae5565b6101dc600480360360408110156102e357600080fd5b5080359060200135610aeb565b610237610b02565b610237610b1c565b6101dc6004803603602081101561031657600080fd5b503563ffffffff16610b26565b6101dc600480360361044081101561033a57600080fd5b81019060208101813564010000000081111561035557600080fd5b82018360208201111561036757600080fd5b8035906020019184600183028401116401000000008311171561038957600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955092935050506104008201359050610b5d565b610237610be9565b610237600480360360208110156103ef57600080fd5b5035610bef565b6101dc6004803603606081101561040c57600080fd5b81359160208101359181019060608101604082013564010000000081111561043357600080fd5b82018360208201111561044557600080fd5b8035906020019184600183028401116401000000008311171561046757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c01945050505050565b6104b0610e49565b6040805163ffffffff9092168252519081900360200190f35b6104d1610e6d565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6102b16004803603602081101561051057600080fd5b81019060208101813564010000000081111561052b57600080fd5b82018360208201111561053d57600080fd5b8035906020019184600183028401116401000000008311171561055f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e89945050505050565b6104b06114cc565b6102b1600480360360208110156105be57600080fd5b8101906020810181356401000000008111156105d957600080fd5b8201836020820111156105eb57600080fd5b8035906020019184600183028401116401000000008311171561060d57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506114d8945050505050565b610237600480360361044081101561066557600080fd5b50803590602081019061042001356114e9565b6101dc6004803603602081101561068e57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611527565b6102b1600480360360208110156106c157600080fd5b5035611602565b6101dc600480360360208110156106de57600080fd5b8101906020810181356401000000008111156106f957600080fd5b82018360208201111561070b57600080fd5b8035906020019184600183028401116401000000008311171561072d57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061162b945050505050565b6102376116b5565b6102666116b9565b6102376116dc565b6104d1611700565b6101dc600480360360208110156107a457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611722565b6107c9611901565b6040805160ff9092168252519081900360200190f35b6107e7611906565b565b600054610100900460ff16806108025750610802611949565b80610810575060005460ff16155b610865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612b77602e913960400191505060405180910390fd5b600054610100900460ff161580156108cb57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b6108d48561195a565b6032805460017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009091168117909155603080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff89161790556036849055600085815260336020526040902055603182905561095533611722565b801561098457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60346020526000908152604090205460ff1681565b60008060008581526034602052604090205460ff1660028111156109e557fe5b14610a5157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f214d6573736167655374617475732e4e6f6e6500000000000000000000000000604482015290519081900360640190fd5b6000610a87858560208060200260405190810160405280929190826020800280828437600092019190915250879150611aee9050565b9050610a9281611602565b15610ad8575050600083815260346020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155610ade565b60009150505b9392505050565b60315481565b603655600090815260336020526040902060019055565b603054600090610b179063ffffffff16611b99565b905090565b6000610b17610b02565b603080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff92909216919091179055565b610b6f838051906020012083836109c5565b610bda57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2170726f76650000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b610be383610e89565b50505050565b60365481565b60336020526000908152604090205481565b6002600054760100000000000000000000000000000000000000000000900460ff166002811115610c2e57fe5b1415610c9b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6661696c65642073746174650000000000000000000000000000000000000000604482015290519081900360640190fd5b6036548211610d0b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6c642075706461746500000000000000000000000000000000000000000000604482015290519081900360640190fd5b610d16838383611c0e565b610d8157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f2175706461746572207369670000000000000000000000000000000000000000604482015290519081900360640190fd5b6031546000848152603360209081526040808320429094019093556036859055603054835182815285518184015285518795899563ffffffff909416947ffd37aebea02702b01c5bb3bea81b9111e11ef85d19cb2ba74500a2f199a26a1b9489949384938401928601918190849084905b83811015610e0a578181015183820152602001610df2565b50505050905090810190601f168015610e375780820380516001836020036101000a031916815260200191505b509250505060405180910390a4505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60355473ffffffffffffffffffffffffffffffffffffffff1690565b600080610e968382611ca6565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610eea7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316611cca565b63ffffffff1614610f5c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f2164657374696e6174696f6e0000000000000000000000000000000000000000604482015290519081900360640190fd5b6000610f897fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316611cfb565b9050600160008281526034602052604090205460ff166002811115610faa57fe5b1461101657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f2170726f76656e00000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60325460ff1660011461108a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f217265656e7472616e7400000000000000000000000000000000000000000000604482015290519081900360640190fd5b603280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009081169091556000828152603460205260409020805490911660021790557f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000015a101561118057604080517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048083019190915260248201527f2167617300000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60006111ad7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008416611d3a565b6040805161010080825261012082019092529192506000917f00000000000000000000000000000000000000000000000000000000000000009083908360208201818036833701905050905060006112267fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008916611d4d565b6112517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008a16611d7d565b6112a661127f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008c16611dae565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000016611e1f565b604051602401808463ffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156112f85781810151838201526020016112e0565b50505050905090810190601f1680156113255780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f56d5d4750000000000000000000000000000000000000000000000000000000017815281519197506000965086955090935091508390508a88f198503d9450838511156113c4578394505b848252846000602084013e816040518082805190602001908083835b6020831061141d57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016113e0565b5181516020939093036101000a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0180199091169216919091179052604051920182900382209350508b1515915089907fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe4890600090a45050603280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905550949695505050505050565b60305463ffffffff1681565b60006114e382610e89565b92915050565b600061151f848460208060200260405190810160405280929190826020800280828437600092019190915250869150611aee9050565b949350505050565b6000611531610e6d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806115875750600061156f610e6d565b73ffffffffffffffffffffffffffffffffffffffff16145b9050806115f557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f216f776e65720000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6115fe82611e63565b5050565b60008181526033602052604081205480611620576000915050611626565b42101590505b919050565b60006116378282611ca6565b905060016034600061166a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008516611cfb565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660018360028111156116ac57fe5b02179055505050565b4290565b600054760100000000000000000000000000000000000000000000900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff1681565b600061172c610e6d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806117825750600061176a610e6d565b73ffffffffffffffffffffffffffffffffffffffff16145b9050806117f057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f216f776e65720000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff821661187257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f216e65774f776e65720000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60355460405173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350603580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600081565b600080547fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16760200000000000000000000000000000000000000000000179055565b600061195430611ee4565b15905090565b600054610100900460ff16806119735750611973611949565b80611981575060005460ff16155b6119d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612b77602e913960400191505060405180910390fd5b600054610100900460ff16158015611a3c57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000073ffffffffffffffffffffffffffffffffffffffff851602177fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff1676010000000000000000000000000000000000000000000017905580156115fe57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555050565b8260005b6020811015611b9157600183821c166000858360208110611b0f57fe5b602002015190508160011415611b555780846040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209350611b87565b838160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012093505b5050600101611af2565b509392505050565b6040805160e09290921b7fffffffff00000000000000000000000000000000000000000000000000000000166020808401919091527f4f5054494353000000000000000000000000000000000000000000000000000060248401528151808403600a018152602a909301909152815191012090565b600080611c19610b02565b8585604051602001808481526020018381526020018281526020019350505050604051602081830303815290604052805190602001209050611c5a81611eea565b60005490915062010000900473ffffffffffffffffffffffffffffffffffffffff16611c868285611f3b565b73ffffffffffffffffffffffffffffffffffffffff161495945050505050565b815160009060208401611cc164ffffffffff85168284611fd5565b95945050505050565b60006114e37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000083166028600461202b565b600080611d078361204c565b6bffffffffffffffffffffffff1690506000611d2284612060565b6bffffffffffffffffffffffff169091209392505050565b60006114e3611d4883612074565b6120a5565b60006114e37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000831682600461202b565b60006114e37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316600460206120a8565b60006114e3604c80611de17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008616612060565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000861692916bffffffffffffffffffffffff91909116036000612253565b6060600080611e2d84612060565b6bffffffffffffffffffffffff1690506040519150819250611e5284836020016122d9565b508181016020016040529052919050565b6000805473ffffffffffffffffffffffffffffffffffffffff83166201000081027fffffffffffffffffffff0000000000000000000000000000000000000000ffff9092169190911790915560408051918252517f9e5f57e4ee5f9eeac3131028d48f19d80820ce6fa93c4c66cc82a3e2b9837c329181900360200190a150565b3b151590565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b60008151604114611fad57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a611fcb86828585612405565b9695505050505050565b600080611fe284846125f3565b9050604051811115611ff2575060005b80612020577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000915050610ade565b611cc1858585612665565b60008160200360080260ff166120428585856120a8565b901c949350505050565b60781c6bffffffffffffffffffffffff1690565b60181c6bffffffffffffffffffffffff1690565b60006114e37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316602c60206120a8565b90565b600060ff82166120ba57506000610ade565b6120c384612060565b6bffffffffffffffffffffffff166120de8460ff85166125f3565b11156121bd5761211f6120f08561204c565b6bffffffffffffffffffffffff1661210786612060565b6bffffffffffffffffffffffff16858560ff16612678565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561218257818101518382015260200161216a565b50505050905090810190601f1680156121af5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60208260ff16111561221a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180612bc7603a913960400191505060405180910390fd5b6008820260006122298661204c565b6bffffffffffffffffffffffff1690506000612244836127d3565b91909501511695945050505050565b60008061225f8661204c565b6bffffffffffffffffffffffff1690506122788661281c565b61228c8561228684896125f3565b906125f3565b11156122bb577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000091505061151f565b6122c581866125f3565b9050611fcb8364ffffffffff168286611fd5565b60006122e483612846565b612339576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612c016028913960400191505060405180910390fd5b61234283612858565b612397576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612c29602b913960400191505060405180910390fd5b60006123a284612060565b6bffffffffffffffffffffffff16905060006123bd8561204c565b6bffffffffffffffffffffffff16905060006040519050848111156123e25760206060fd5b8285848460045afa50611fcb6123f787612895565b64ffffffffff168685612665565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115612480576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612b346022913960400191505060405180910390fd5b8360ff16601b148061249557508360ff16601c145b6124ea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612ba56022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015612546573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611cc157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b818101828110156114e357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4f766572666c6f7720647572696e67206164646974696f6e2e00000000000000604482015290519081900360640190fd5b606092831b9190911790911b1760181b90565b606060006126858661289b565b91505060006126938661289b565b91505060006126a18661289b565b91505060006126af8661289b565b915050838383836040516020018080612c54603591397fffffffffffff000000000000000000000000000000000000000000000000000060d087811b821660358401527f2077697468206c656e6774682030780000000000000000000000000000000000603b84015286901b16604a8201526050016021612b5682397fffffffffffff000000000000000000000000000000000000000000000000000060d094851b811660218301527f2077697468206c656e677468203078000000000000000000000000000000000060278301529290931b9091166036830152507f2e00000000000000000000000000000000000000000000000000000000000000603c82015260408051601d818403018152603d90920190529b9a5050505050505050505050565b7f80000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091011d90565b600061282782612060565b6128308361204c565b016bffffffffffffffffffffffff169050919050565b60006128518261296f565b1592915050565b600061286382612895565b64ffffffffff1664ffffffffff141561287e57506000611626565b60006128898361281c565b60405110199392505050565b60d81c90565b600080601f5b600f8160ff1611156129035760ff600882021684901c6128c081612997565b61ffff16841793508160ff166010146128db57601084901b93505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016128a1565b50600f5b60ff8160ff1610156129695760ff600882021684901c61292681612997565b61ffff16831792508160ff1660001461294157601083901b92505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01612907565b50915091565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000009081161490565b60006129a960048360ff16901c6129c7565b60ff161760081b62ffff00166129be826129c7565b60ff1617919050565b600060f08083179060ff821614156129e3576030915050611626565b8060ff1660f114156129f9576031915050611626565b8060ff1660f21415612a0f576032915050611626565b8060ff1660f31415612a25576033915050611626565b8060ff1660f41415612a3b576034915050611626565b8060ff1660f51415612a51576035915050611626565b8060ff1660f61415612a67576036915050611626565b8060ff1660f71415612a7d576037915050611626565b8060ff1660f81415612a93576038915050611626565b8060ff1660f91415612aa9576039915050611626565b8060ff1660fa1415612abf576061915050611626565b8060ff1660fb1415612ad5576062915050611626565b8060ff1660fc1415612aeb576063915050611626565b8060ff1660fd1415612b01576064915050611626565b8060ff1660fe1415612b17576065915050611626565b8060ff1660ff1415612b2d576066915050611626565b5091905056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c75652e20417474656d7074656420746f20696e646578206174206f6666736574203078496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445434453413a20696e76616c6964207369676e6174757265202776272076616c756554797065644d656d566965772f696e646578202d20417474656d7074656420746f20696e646578206d6f7265207468616e20333220627974657354797065644d656d566965772f636f7079546f202d204e756c6c20706f696e74657220646572656654797065644d656d566965772f636f7079546f202d20496e76616c696420706f696e74657220646572656654797065644d656d566965772f696e646578202d204f76657272616e2074686520766965772e20536c696365206973206174203078a26469706673582212205577e5182539fe3b3b9c425767699b017317872491c86f6e0b824e3954bbdcde64736f6c63430007060033";

export class TestReplica__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _localDomain: BigNumberish,
    arg1: BigNumberish,
    arg2: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestReplica> {
    return super.deploy(
      _localDomain,
      arg1,
      arg2,
      overrides || {}
    ) as Promise<TestReplica>;
  }
  getDeployTransaction(
    _localDomain: BigNumberish,
    arg1: BigNumberish,
    arg2: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _localDomain,
      arg1,
      arg2,
      overrides || {}
    );
  }
  attach(address: string): TestReplica {
    return super.attach(address) as TestReplica;
  }
  connect(signer: Signer): TestReplica__factory {
    return super.connect(signer) as TestReplica__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestReplicaInterface {
    return new utils.Interface(_abi) as TestReplicaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestReplica {
    return new Contract(address, _abi, signerOrProvider) as TestReplica;
  }
}
