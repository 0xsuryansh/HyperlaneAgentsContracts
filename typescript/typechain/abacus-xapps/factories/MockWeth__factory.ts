/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockWeth, MockWethInterface } from "../MockWeth";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "domainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_newSymbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_newDecimals",
        type: "uint8",
      },
    ],
    name: "setDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9608052610120604052600160e052603160f81b610100527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660a05261190160c05234801561006d57600080fd5b5060805160a05160c051611c786100a46000396000610bc601526000610f1c0152600081816103a80152610b620152611c786000f3fe60806040526004361061018b5760003560e01c80638da5cb5b116100d6578063d0e30db01161007f578063f2fde38b11610059578063f2fde38b146104a5578063f698da25146104c5578063ffa1ad74146104da57600080fd5b8063d0e30db01461042a578063d505accf14610432578063dd62ed3e1461045257600080fd5b80639dc29fac116100b05780639dc29fac146103ca578063a457c2d7146103ea578063a9059cbb1461040a57600080fd5b80638da5cb5b1461034c57806395d89b4114610381578063982aaf6b1461039657600080fd5b806340c10f1911610138578063715018a611610112578063715018a6146102f55780637ecebe001461030a5780638129fc1c1461033757600080fd5b806340c10f1914610270578063654935f41461029257806370a08231146102b257600080fd5b806323b872dd1161016957806323b872dd1461020a578063313ce5671461022a578063395093511461025057600080fd5b806306fdde0314610190578063095ea7b3146101bb57806318160ddd146101eb575b600080fd5b34801561019c57600080fd5b506101a56104ef565b6040516101b29190611821565b60405180910390f35b3480156101c757600080fd5b506101db6101d63660046118bd565b610584565b60405190151581526020016101b2565b3480156101f757600080fd5b506067545b6040519081526020016101b2565b34801561021657600080fd5b506101db6102253660046118e7565b61059a565b34801561023657600080fd5b50606a5460ff165b60405160ff90911681526020016101b2565b34801561025c57600080fd5b506101db61026b3660046118bd565b6105f9565b34801561027c57600080fd5b5061029061028b3660046118bd565b61063d565b005b34801561029e57600080fd5b506102906102ad36600461197d565b6106d1565b3480156102be57600080fd5b506101fc6102cd3660046119fe565b73ffffffffffffffffffffffffffffffffffffffff1660009081526065602052604090205490565b34801561030157600080fd5b506102906107a4565b34801561031657600080fd5b506101fc6103253660046119fe565b606b6020526000908152604090205481565b34801561034357600080fd5b50610290610831565b34801561035857600080fd5b5060335460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b2565b34801561038d57600080fd5b506101a5610955565b3480156103a257600080fd5b506101fc7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103d657600080fd5b506102906103e53660046118bd565b610967565b3480156103f657600080fd5b506101db6104053660046118bd565b6109f2565b34801561041657600080fd5b506101db6104253660046118bd565b610a36565b610290610a43565b34801561043e57600080fd5b5061029061044d366004611a20565b610a4d565b34801561045e57600080fd5b506101fc61046d366004611a8a565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260666020908152604080832093909416825291909152205490565b3480156104b157600080fd5b506102906104c03660046119fe565b610d9f565b3480156104d157600080fd5b506101fc610ecc565b3480156104e657600080fd5b5061023e600081565b60606068600001805461050190611abd565b80601f016020809104026020016040519081016040528092919081815260200182805461052d90611abd565b801561057a5780601f1061054f5761010080835404028352916020019161057a565b820191906000526020600020905b81548152906001019060200180831161055d57829003601f168201915b5050505050905090565b6000610591338484610f6c565b50600192915050565b60006105a7848484611120565b73ffffffffffffffffffffffffffffffffffffffff84166000908152606660209081526040808320338085529252909120546105ef9186916105ea908690611b40565b610f6c565b5060019392505050565b33600081815260666020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916105919185906105ea908690611b57565b60335473ffffffffffffffffffffffffffffffffffffffff1633146106c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6106cd8282611335565b5050565b60335473ffffffffffffffffffffffffffffffffffffffff163314610752576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ba565b61075e6068868661176a565b5061076b6069848461176a565b50606a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff9290921691909117905550505050565b60335473ffffffffffffffffffffffffffffffffffffffff163314610825576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ba565b61082f600061145e565b565b600054610100900460ff1661084c5760005460ff1615610850565b303b155b6108dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016106ba565b600054610100900460ff1615801561091b57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011790555b6109236114d5565b801561095257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b50565b60606068600101805461050190611abd565b60335473ffffffffffffffffffffffffffffffffffffffff1633146109e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ba565b6106cd8282611574565b33600081815260666020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916105919185906105ea908690611b40565b6000610591338484611120565b61082f3334611335565b83421115610ab7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016106ba565b73ffffffffffffffffffffffffffffffffffffffff8716610b34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332305065726d69743a206f776e6572207a65726f20616464726573730060448201526064016106ba565b73ffffffffffffffffffffffffffffffffffffffff8781166000818152606b602090815260408083205481517f00000000000000000000000000000000000000000000000000000000000000008185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e090940190528251920191909120907f0000000000000000000000000000000000000000000000000000000000000000610bed610ecc565b60405160f09290921b7fffff000000000000000000000000000000000000000000000000000000000000166020830152602282015260428101839052606201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015610cb5573d6000803e3d6000fd5b5050506020604051035190508a73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016106ba565b610d61846001611b57565b73ffffffffffffffffffffffffffffffffffffffff8c166000908152606b6020526040902055610d928b8b8b610f6c565b5050505050505050505050565b60335473ffffffffffffffffffffffffffffffffffffffff163314610e20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ba565b73ffffffffffffffffffffffffffffffffffffffff8116610ec3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106ba565b6109528161145e565b60405160009046907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f90610f0290606890611b6f565b6040805191829003822060208301939093528101919091527f00000000000000000000000000000000000000000000000000000000000000006060820152608081018290523060a082015260c0016040516020818303038152906040528051906020012091505090565b73ffffffffffffffffffffffffffffffffffffffff831661100e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016106ba565b73ffffffffffffffffffffffffffffffffffffffff82166110b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016106ba565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166111c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016106ba565b73ffffffffffffffffffffffffffffffffffffffff8216611266576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016106ba565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260656020526040902054611297908290611b40565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526065602052604080822093909355908416815220546112d4908290611b57565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526065602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906111139085815260200190565b73ffffffffffffffffffffffffffffffffffffffff82166113b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106ba565b806067546113c09190611b57565b60675573ffffffffffffffffffffffffffffffffffffffff82166000908152606560205260409020546113f4908290611b57565b73ffffffffffffffffffffffffffffffffffffffff83166000818152606560205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906114529085815260200190565b60405180910390a35050565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661156c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016106ba565b61082f6116ca565b73ffffffffffffffffffffffffffffffffffffffff8216611617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016106ba565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260656020526040902054611648908290611b40565b73ffffffffffffffffffffffffffffffffffffffff831660009081526065602052604090205560675461167c908290611b40565b60675560405181815260009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611452565b600054610100900460ff16611761576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016106ba565b61082f3361145e565b82805461177690611abd565b90600052602060002090601f01602090048101928261179857600085556117fc565b82601f106117cf578280017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008235161785556117fc565b828001600101855582156117fc579182015b828111156117fc5782358255916020019190600101906117e1565b5061180892915061180c565b5090565b5b80821115611808576000815560010161180d565b600060208083528351808285015260005b8181101561184e57858101830151858201604001528201611832565b81811115611860576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146118b857600080fd5b919050565b600080604083850312156118d057600080fd5b6118d983611894565b946020939093013593505050565b6000806000606084860312156118fc57600080fd5b61190584611894565b925061191360208501611894565b9150604084013590509250925092565b60008083601f84011261193557600080fd5b50813567ffffffffffffffff81111561194d57600080fd5b60208301915083602082850101111561196557600080fd5b9250929050565b803560ff811681146118b857600080fd5b60008060008060006060868803121561199557600080fd5b853567ffffffffffffffff808211156119ad57600080fd5b6119b989838a01611923565b909750955060208801359150808211156119d257600080fd5b506119df88828901611923565b90945092506119f290506040870161196c565b90509295509295909350565b600060208284031215611a1057600080fd5b611a1982611894565b9392505050565b600080600080600080600060e0888a031215611a3b57600080fd5b611a4488611894565b9650611a5260208901611894565b95506040880135945060608801359350611a6e6080890161196c565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611a9d57600080fd5b611aa683611894565b9150611ab460208401611894565b90509250929050565b600181811c90821680611ad157607f821691505b60208210811415611b0b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015611b5257611b52611b11565b500390565b60008219821115611b6a57611b6a611b11565b500190565b600080835481600182811c915080831680611b8b57607f831692505b6020808410821415611bc4577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b818015611bd85760018114611c0757611c34565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00861689528489019650611c34565b60008a81526020902060005b86811015611c2c5781548b820152908501908301611c13565b505084890196505b50949897505050505050505056fea26469706673582212201e8e6fc7fa0c4b65118b2e7b135681b86c2861a1c1d11d16b97fd1350ec3397b64736f6c63430008090033";

export class MockWeth__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockWeth> {
    return super.deploy(overrides || {}) as Promise<MockWeth>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockWeth {
    return super.attach(address) as MockWeth;
  }
  connect(signer: Signer): MockWeth__factory {
    return super.connect(signer) as MockWeth__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockWethInterface {
    return new utils.Interface(_abi) as MockWethInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockWeth {
    return new Contract(address, _abi, signerOrProvider) as MockWeth;
  }
}
