/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestBridgeMessage,
  TestBridgeMessageInterface,
} from "../TestBridgeMessage";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_symbol",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    name: "testFormatDetails",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_tokenId",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
      {
        internalType: "enum BridgeMessage.Types",
        name: "_idType",
        type: "uint8",
      },
      {
        internalType: "enum BridgeMessage.Types",
        name: "_actionType",
        type: "uint8",
      },
    ],
    name: "testFormatMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testFormatRequestDetails",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
    ],
    name: "testFormatTokenId",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_to",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "testFormatTransfer",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
    ],
    name: "testIsDetails",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
    ],
    name: "testIsRequestDetails",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
    ],
    name: "testIsTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
      {
        internalType: "enum BridgeMessage.Types",
        name: "_t",
        type: "uint8",
      },
    ],
    name: "testIsValidAction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testIsValidMessageLength",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testMessageType",
    outputs: [
      {
        internalType: "enum BridgeMessage.Types",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_details",
        type: "bytes",
      },
    ],
    name: "testMustBeDetails",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testMustBeMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_request",
        type: "bytes",
      },
    ],
    name: "testMustBeRequestDetails",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_tokenId",
        type: "bytes",
      },
    ],
    name: "testMustBeTokenId",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_transfer",
        type: "bytes",
      },
    ],
    name: "testMustBeTransfer",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_details",
        type: "bytes",
      },
    ],
    name: "testSplitDetails",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testSplitMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_tokenId",
        type: "bytes",
      },
    ],
    name: "testSplitTokenId",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_transfer",
        type: "bytes",
      },
    ],
    name: "testSplitTransfer",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506122ec806100206000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c80636c18a185116100cd578063932cbc9811610081578063cd9aeee611610066578063cd9aeee61461038a578063dfd9d1db1461039d578063f9dd616a146103b057600080fd5b8063932cbc9814610364578063b81726a21461037757600080fd5b80638213d910116100b25780638213d9101461032b57806382cfb20e1461033e5780638f071d7e1461035157600080fd5b80636c18a1851461029d57806375fbce8e146102ef57600080fd5b80631a028e201161012457806348528b0c1161010957806348528b0c146102615780635029539f146102825780635048e37a1461028a57600080fd5b80631a028e20146102035780631b083da51461021657600080fd5b806308e3410a1161015557806308e3410a146101ad57806312bdd731146101d057806313acadec146101f057600080fd5b8063040e728e14610171578063089ee8291461019a575b600080fd5b61018461017f366004611d7c565b6103c3565b6040516101919190611e1c565b60405180910390f35b6101846101a8366004611d7c565b610410565b6101c06101bb366004611d7c565b61042c565b6040519015158152602001610191565b6101e36101de366004611d7c565b610444565b6040516101919190611e5e565b6101c06101fe366004611d7c565b610464565b610184610211366004611e9f565b61047c565b610229610224366004611d7c565b610494565b6040805163ffffffff9094168452602084019290925273ffffffffffffffffffffffffffffffffffffffff1690820152606001610191565b61027461026f366004611d7c565b6104da565b604051610191929190611ede565b61018461056a565b610184610298366004611d7c565b61057c565b6102b06102ab366004611d7c565b610598565b6040805160ff9095168552602085019390935273ffffffffffffffffffffffffffffffffffffffff909116918301919091526060820152608001610191565b6103026102fd366004611d7c565b6105f1565b6040805160ff958616815260208101949094528301919091529091166060820152608001610191565b6101c0610339366004611f17565b610635565b61018461034c366004611d7c565b61065d565b61018461035f366004611f65565b610679565b6101c0610372366004611d7c565b610688565b6101c0610385366004611d7c565b6106a8565b610184610398366004611f87565b6106c0565b6101846103ab366004611fbc565b6106cf565b6101846103be366004611d7c565b610718565b606060006103d460055b8490610734565b90506104096103e282610758565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000001661078d565b9392505050565b6060600061041e60046103cd565b90506104096103e2826107e7565b60008061043960046103cd565b9050610409816107f5565b60008061045083610831565b905061040961045f8483610734565b610854565b60008061047160056103cd565b90506104098161086f565b606061048c6103e285858561088e565b949350505050565b60008080806104a4856001610734565b905060006104b1826108e9565b905060006104be8361094c565b905060006104cb8461098a565b92989197509195509350505050565b60608060006104ec60025b8590610734565b905060006104f9826109c6565b9050600061050683610a06565b90506105337fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000831661078d565b61055e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000831661078d565b94509450505050915091565b60606105776103e2610a7f565b905090565b6060600061058a60036103cd565b90506104096103e282610aa0565b6000808080806105ab60035b8790610734565b905060006105b882610aae565b905060006105c583610ade565b905060006105d284610b1c565b905060006105df85610b58565b939a9299509097509195509350505050565b60008080808061060160046105a4565b9050600061060e82610aae565b9050600061061b83610b96565b9050600061062884610ba4565b905060006105df85610be2565b600061065461064f8360058111156104e5576104e5611e2f565b610c20565b90505b92915050565b6060600061066b60016103cd565b90506104096103e282610c49565b60606106546103e28484610c57565b60008061069483610831565b90506104096106a38483610734565b610c7c565b6000806106b560036103cd565b905061040981610cc6565b60606106546103e28484610ce5565b606060006106e88460058111156105a4576105a4611e2f565b905060006107018460058111156105a4576105a4611e2f565b905061070d8282610d35565b979650505050505050565b6060600061072660026103cd565b90506104096103e282610e55565b81516000906020840161074f64ffffffffff85168284610e63565b95945050505050565b600061065761076683610ec3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000016610f31565b60606000806107aa8460181c6bffffffffffffffffffffffff1690565b60405193508392506bffffffffffffffffffffffff1690506107d6846107d1846020612070565b610fa6565b508181016020016040529052919050565b600061065761076683611192565b6000600461080283610aae565b60ff16148015610657575060045b61081983610854565b600581111561082a5761082a611e2f565b1492915050565b60008160248151811061084657610846612088565b016020015160f81c92915050565b600060d882901c60ff16600581111561065757610657611e2f565b6000600561087c83610aae565b60ff1614801561065757506005610810565b600061048c6108e4600060048787876040516020016108b094939291906120f5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905290610734565b6107e7565b600081600161091c815b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008416906111b9565b5061048c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008516600060046112d4565b600081600161095a816108f3565b5061048c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000851660046020611304565b6000816001610998816108f3565b5061048c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000851660106114fe565b60008160026109d4816108f3565b5061048c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000851660006024600161150c565b6000816002610a14816108f3565b506000610a346024601887901c6bffffffffffffffffffffffff16612141565b90506000610a41866115a1565b60ff169050610a757fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000087166024848461150c565b9695505050505050565b6000610577610a9b600060056040516020016108b09190612158565b610758565b6000610657610766836115d2565b60006106577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000083168260016112d4565b6000816003610aec816108f3565b5061048c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000851660016020611304565b6000816003610b2a816108f3565b5061048c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008516600d6114fe565b6000816003610b66816108f3565b5061048c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008516602160206112d4565b6000816004610aec816108f3565b6000816004610bb2816108f3565b5061048c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000851660216020611304565b6000816004610bf0816108f3565b5061048c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008516604160016112d4565b6000610c2b826107f5565b80610c3a5750610c3a8261086f565b80610657575061065782610cc6565b6000610657610766836115f9565b6000610654610c776000600386866040516020016108b09392919061216a565b610aa0565b6000601882901c6bffffffffffffffffffffffff16610c9d60416024612070565b811480610cb45750610cb160426024612070565b81145b80610409575061082a60016024612070565b60006003610cd383610aae565b60ff1614801561065757506003610810565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1660208201526024810182905260009061065490610d309083906044016108b0565b610c49565b6060826001610d43816108f3565b50610d4d84610c20565b610db8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f21616374696f6e0000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6040805160028082526060820183526000926020830190803683370190505090508581600081518110610ded57610ded612088565b602002602001019062ffffff1916908162ffffff1916815250508481600181518110610e1b57610e1b612088565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000090921660209283029190910190910152610a7581611620565b600061065761076683611686565b600080610e7084846116a0565b9050604051811115610e80575060005b80610eae577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000915050610409565b5050606092831b9190911790911b1760181b90565b6000601882901c6bffffffffffffffffffffffff1660011415610f0b5761065760055b60d81b7affffffffffffffffffffffffffffffffffffffffffffffff00000084161790565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000610657565b6000610f3c82611718565b610fa2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f56616c696469747920617373657274696f6e206661696c6564000000000000006044820152606401610daf565b5090565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000808416141561105a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201527f65722064657265660000000000000000000000000000000000000000000000006064820152608401610daf565b61106383611718565b6110ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201527f696e7465722064657265660000000000000000000000000000000000000000006064820152608401610daf565b60006111098460181c6bffffffffffffffffffffffff1690565b6bffffffffffffffffffffffff16905060006111338560781c6bffffffffffffffffffffffff1690565b6bffffffffffffffffffffffff16905060006040519050848111156111585760206060fd5b8285848460045afa50610a7561116e8760d81c90565b70ffffffffff000000000000000000000000606091821b168717901b841760181b90565b6000601882901c6bffffffffffffffffffffffff1660421415610f0b576106576004610ee6565b60006111c58383611756565b6112cd5760006111e46111d88560d81c90565b64ffffffffff16611779565b91505060006111f98464ffffffffff16611779565b6040517f5479706520617373657274696f6e206661696c65642e20476f7420307800000060208201527fffffffffffffffffffff0000000000000000000000000000000000000000000060b086811b8216603d8401527f2e20457870656374656420307800000000000000000000000000000000000000604784015283901b16605482015290925060009150605e016040516020818303038152906040529050806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610daf9190611e1c565b5090919050565b60006112e1826020612189565b6112ec9060086121ac565b60ff166112fa858585611304565b901c949350505050565b600060ff821661131657506000610409565b61132e8460181c6bffffffffffffffffffffffff1690565b6bffffffffffffffffffffffff166113498460ff85166116a0565b11156113db576113a861136a8560781c6bffffffffffffffffffffffff1690565b6bffffffffffffffffffffffff166113908660181c6bffffffffffffffffffffffff1690565b6bffffffffffffffffffffffff16858560ff16611839565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610daf9190611e1c565b60208260ff16111561146f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610daf565b600061147c8360086121ac565b905060006114988660781c6bffffffffffffffffffffffff1690565b6bffffffffffffffffffffffff16905060007f80000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84011d91909501511695945050505050565b6000610654838360146112d4565b6000806115278660781c6bffffffffffffffffffffffff1690565b6bffffffffffffffffffffffff169050611540866119c9565b6115548561154e84896116a0565b906116a0565b1115611583577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000091505061048c565b61158d81866116a0565b9050610a758364ffffffffff168286610e63565b60006106577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316602460016112d4565b6000601882901c6bffffffffffffffffffffffff1660411415610f0b576106576003610ee6565b6000601882901c6bffffffffffffffffffffffff1660241415610f0b576106576001610ee6565b604051606090600061163c84611637846020612070565b611a19565b905060006116588260181c6bffffffffffffffffffffffff1690565b6bffffffffffffffffffffffff169050600061167383611abf565b9184525082016020016040525092915050565b600061169182610c7c565b15610f0b576106576002610ee6565b60006116ac8284612070565b905082811015610657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4f766572666c6f7720647572696e67206164646974696f6e2e000000000000006044820152606401610daf565b60006117248260d81c90565b64ffffffffff1664ffffffffff141561173f57506000919050565b600061174a836119c9565b60405110199392505050565b60008164ffffffffff1661176a8460d81c90565b64ffffffffff16149392505050565b600080601f5b600f8160ff1611156117d75760006117988260086121ac565b60ff1685901c90506117a981611ad5565b61ffff16841793508160ff166010146117c457601084901b93505b506117d0600182612189565b905061177f565b50600f5b60ff8160ff1610156118335760006117f48260086121ac565b60ff1685901c905061180581611ad5565b61ffff16831792508160ff1660001461182057601083901b92505b5061182c600182612189565b90506117db565b50915091565b6060600061184686611779565b915050600061185486611779565b915050600061186286611779565b915050600061187086611779565b604080517f54797065644d656d566965772f696e646578202d204f76657272616e2074686560208201527f20766965772e20536c6963652069732061742030780000000000000000000000818301527fffffffffffff000000000000000000000000000000000000000000000000000060d098891b811660558301527f2077697468206c656e6774682030780000000000000000000000000000000000605b830181905297891b8116606a8301527f2e20417474656d7074656420746f20696e646578206174206f6666736574203060708301527f7800000000000000000000000000000000000000000000000000000000000000609083015295881b861660918201526097810196909652951b90921660a684015250507f2e0000000000000000000000000000000000000000000000000000000000000060ac8201528151808203608d01815260ad90910190915295945050505050565b60006119e38260181c6bffffffffffffffffffffffff1690565b6119fb8360781c6bffffffffffffffffffffffff1690565b611a0591906121d5565b6bffffffffffffffffffffffff1692915050565b600060405182811115611a2c5760206060fd5b506000805b8451811015611aaf576000858281518110611a4e57611a4e612088565b60200260200101519050611a688184876107d19190612070565b50611a818160181c6bffffffffffffffffffffffff1690565b611a99906bffffffffffffffffffffffff1684612070565b9250508080611aa790612205565b915050611a31565b50606083901b811760181b61048c565b6000611aca82611b07565b61065790602061223e565b6000611ae760048360ff16901c611b46565b60ff1661ffff919091161760081b611afe82611b46565b60ff1617919050565b60006020611b3c6020611b288560181c6bffffffffffffffffffffffff1690565b6bffffffffffffffffffffffff16906116a0565b610657919061227b565b600060f08083179060ff82161415611b615750603092915050565b8060ff1660f11415611b765750603192915050565b8060ff1660f21415611b8b5750603292915050565b8060ff1660f31415611ba05750603392915050565b8060ff1660f41415611bb55750603492915050565b8060ff1660f51415611bca5750603592915050565b8060ff1660f61415611bdf5750603692915050565b8060ff1660f71415611bf45750603792915050565b8060ff1660f81415611c095750603892915050565b8060ff1660f91415611c1e5750603992915050565b8060ff1660fa1415611c335750606192915050565b8060ff1660fb1415611c485750606292915050565b8060ff1660fc1415611c5d5750606392915050565b8060ff1660fd1415611c725750606492915050565b8060ff1660fe1415611c875750606592915050565b8060ff1660ff1415611c9c5750606692915050565b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112611ce257600080fd5b813567ffffffffffffffff80821115611cfd57611cfd611ca2565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611d4357611d43611ca2565b81604052838152866020858801011115611d5c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611d8e57600080fd5b813567ffffffffffffffff811115611da557600080fd5b61048c84828501611cd1565b6000815180845260005b81811015611dd757602081850181015186830182015201611dbb565b81811115611de9576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006106546020830184611db1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6020810160068310611e99577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b600080600060608486031215611eb457600080fd5b8335925060208401359150604084013560ff81168114611ed357600080fd5b809150509250925092565b604081526000611ef16040830185611db1565b828103602084015261074f8185611db1565b803560068110611f1257600080fd5b919050565b60008060408385031215611f2a57600080fd5b823567ffffffffffffffff811115611f4157600080fd5b611f4d85828601611cd1565b925050611f5c60208401611f03565b90509250929050565b60008060408385031215611f7857600080fd5b50508035926020909101359150565b60008060408385031215611f9a57600080fd5b823563ffffffff81168114611fae57600080fd5b946020939093013593505050565b60008060008060808587031215611fd257600080fd5b843567ffffffffffffffff80821115611fea57600080fd5b611ff688838901611cd1565b9550602087013591508082111561200c57600080fd5b5061201987828801611cd1565b93505061202860408601611f03565b915061203660608601611f03565b905092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561208357612083612041565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600681106120ee577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60f81b9052565b6120ff81866120b7565b6001810193909352602183019190915260f81b7fff00000000000000000000000000000000000000000000000000000000000000166041820152604201919050565b60008282101561215357612153612041565b500390565b61216281836120b7565b600101919050565b61217481856120b7565b60018101929092526021820152604101919050565b600060ff821660ff8416808210156121a3576121a3612041565b90039392505050565b600060ff821660ff84168160ff04811182151516156121cd576121cd612041565b029392505050565b60006bffffffffffffffffffffffff8083168185168083038211156121fc576121fc612041565b01949350505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561223757612237612041565b5060010190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561227657612276612041565b500290565b6000826122b1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea2646970667358221220597ad934930412f6b45da82827fe76ab5982335483ba0452654da52b8e20d4dc64736f6c63430008090033";

export class TestBridgeMessage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestBridgeMessage> {
    return super.deploy(overrides || {}) as Promise<TestBridgeMessage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestBridgeMessage {
    return super.attach(address) as TestBridgeMessage;
  }
  connect(signer: Signer): TestBridgeMessage__factory {
    return super.connect(signer) as TestBridgeMessage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestBridgeMessageInterface {
    return new utils.Interface(_abi) as TestBridgeMessageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestBridgeMessage {
    return new Contract(address, _abi, signerOrProvider) as TestBridgeMessage;
  }
}
