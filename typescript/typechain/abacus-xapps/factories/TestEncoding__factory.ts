/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestEncoding, TestEncodingInterface } from "../TestEncoding";

const _abi = [
  {
    inputs: [],
    name: "test",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061071a806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f8a8fd6d14610030575b600080fd5b61003861003a565b005b6101196100486104d26101df565b604051602001610083919060b09190911b7fffffffffffffffffffff00000000000000000000000000000000000000000000168152600a0190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282018252600a83527f30303030303031323334000000000000000000000000000000000000000000006020848101919091528251808401909352600b83527f656e636f64652031323334000000000000000000000000000000000000000000908301529190610254565b6000806101457fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6102d0565b604080516020810184905290810182905291935091506101db90606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815260608301825281835291906106a560208301396040518060400160405280600e81526020017f656e636f64652075696e746d6178000000000000000000000000000000000000815250610254565b5050565b60006030815b600a8160ff16101561024d576101fc81600861044d565b60ff168261020b600a876104a5565b63ffffffff1661021b91906104c8565b69ffffffffffffffffffff16901b9290921791610239600a856104f6565b9350610246600182610519565b90506101e5565b5050919050565b818051906020012083805190602001201481838560405160200161027a9392919061056a565b604051602081830303815290604052906102ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c19190610601565b60405180910390fd5b50505050565b600080601f5b600f8160ff16111561032e5760006102ef82600861044d565b60ff1685901c905061030081610390565b61ffff16841793508160ff1660101461031b57601084901b93505b50610327600182610652565b90506102d6565b50600f5b60ff8160ff16101561038a57600061034b82600861044d565b60ff1685901c905061035c81610390565b61ffff16831792508160ff1660001461037757601083901b92505b50610383600182610652565b9050610332565b50915091565b60006103a260048360ff16901c6103c2565b60ff1661ffff919091161760081b6103b9826103c2565b60ff1617919050565b6040805180820190915260108082527f30313233343536373839616263646566000000000000000000000000000000006020830152600091600f8416918290811061040f5761040f610675565b016020015160f81c9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060ff821660ff84168160ff048111821515161561046e5761046e61041e565b029392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600063ffffffff808416806104bc576104bc610476565b92169190910692915050565b600069ffffffffffffffffffff8083168185168083038211156104ed576104ed61041e565b01949350505050565b600063ffffffff8084168061050d5761050d610476565b92169190910492915050565b600060ff821660ff84168060ff038211156105365761053661041e565b019392505050565b60005b83811015610559578181015183820152602001610541565b838111156102ca5750506000910152565b6000845161057c81846020890161053e565b7f206578706563746564200000000000000000000000000000000000000000000090830190815284516105b681600a84016020890161053e565b7f20676f7420000000000000000000000000000000000000000000000000000000600a929091019182015283516105f481600f84016020880161053e565b01600f0195945050505050565b602081526000825180602084015261062081604085016020870161053e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600060ff821660ff84168082101561066c5761066c61041e565b90039392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666a26469706673582212204e7eb84721196979dfd8314737dd24638975d5445da0f2472e88eb58f3861ba764736f6c63430008090033";

export class TestEncoding__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestEncoding> {
    return super.deploy(overrides || {}) as Promise<TestEncoding>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestEncoding {
    return super.attach(address) as TestEncoding;
  }
  connect(signer: Signer): TestEncoding__factory {
    return super.connect(signer) as TestEncoding__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestEncodingInterface {
    return new utils.Interface(_abi) as TestEncodingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestEncoding {
    return new Contract(address, _abi, signerOrProvider) as TestEncoding;
  }
}
