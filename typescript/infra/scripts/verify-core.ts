import { readFileSync } from 'fs';
import path from 'path';

import { CompleteChainMap, ContractVerifier } from '@abacus-network/sdk';

import { fetchGCPSecret } from '../src/utils/gcloud';
import { readJSON } from '../src/utils/utils';

import {
  getCoreEnvironmentConfig,
  getCoreVerificationDirectory,
  getEnvironment,
} from './utils';

async function main() {
  const environment = await getEnvironment();
  const config = getCoreEnvironmentConfig(environment) as any;
  const multiProvider = await config.getMultiProvider();

  const verification = readJSON(
    getCoreVerificationDirectory(environment),
    'verification.json',
  );

  const flattenedSource = readFileSync(
    // generated by yarn hardhat flatten in core
    path.join(getCoreVerificationDirectory(environment), 'flattened.sol'),
    { encoding: 'utf8' },
  );

  const apiKeys: CompleteChainMap<string> = await fetchGCPSecret(
    'explorer-api-keys',
    true,
  );

  const verifier = new ContractVerifier(
    verification,
    multiProvider,
    apiKeys,
    flattenedSource,
  );

  await verifier.verify();
}

main().then().catch();
