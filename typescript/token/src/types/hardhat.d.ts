/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import * as Contracts from '.';
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from '@nomiclabs/hardhat-ethers/types';
import { ethers } from 'ethers';

declare module 'hardhat/types/runtime' {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: 'GasRouter',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.GasRouter__factory>;
    getContractFactory(
      name: 'HyperlaneConnectionClient',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.HyperlaneConnectionClient__factory>;
    getContractFactory(
      name: 'IHyperlaneConnectionClient',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IHyperlaneConnectionClient__factory>;
    getContractFactory(
      name: 'IInterchainGasPaymaster',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IInterchainGasPaymaster__factory>;
    getContractFactory(
      name: 'IInterchainSecurityModule',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IInterchainSecurityModule__factory>;
    getContractFactory(
      name: 'ISpecifiesInterchainSecurityModule',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ISpecifiesInterchainSecurityModule__factory>;
    getContractFactory(
      name: 'IMailbox',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IMailbox__factory>;
    getContractFactory(
      name: 'IMessageRecipient',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IMessageRecipient__factory>;
    getContractFactory(
      name: 'Router',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Router__factory>;
    getContractFactory(
      name: 'OwnableUpgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: 'Initializable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: 'ERC20Upgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20Upgradeable__factory>;
    getContractFactory(
      name: 'IERC20MetadataUpgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20MetadataUpgradeable__factory>;
    getContractFactory(
      name: 'IERC20Upgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20Upgradeable__factory>;
    getContractFactory(
      name: 'ERC721Upgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC721Upgradeable__factory>;
    getContractFactory(
      name: 'ERC721EnumerableUpgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC721EnumerableUpgradeable__factory>;
    getContractFactory(
      name: 'ERC721URIStorageUpgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC721URIStorageUpgradeable__factory>;
    getContractFactory(
      name: 'IERC721EnumerableUpgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721EnumerableUpgradeable__factory>;
    getContractFactory(
      name: 'IERC721MetadataUpgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721MetadataUpgradeable__factory>;
    getContractFactory(
      name: 'IERC721ReceiverUpgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: 'IERC721Upgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721Upgradeable__factory>;
    getContractFactory(
      name: 'ContextUpgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: 'ERC165Upgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: 'IERC165Upgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: 'ERC20',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: 'IERC20Permit',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: 'IERC20Metadata',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: 'IERC20',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: 'ERC721',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: 'ERC721Enumerable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: 'IERC721Enumerable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: 'IERC721Metadata',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: 'IERC721',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: 'IERC721Receiver',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: 'ERC165',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: 'IERC165',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: 'HypERC721URICollateral',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.HypERC721URICollateral__factory>;
    getContractFactory(
      name: 'HypERC721URIStorage',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.HypERC721URIStorage__factory>;
    getContractFactory(
      name: 'HypERC20',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.HypERC20__factory>;
    getContractFactory(
      name: 'HypERC20Collateral',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.HypERC20Collateral__factory>;
    getContractFactory(
      name: 'HypERC721',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.HypERC721__factory>;
    getContractFactory(
      name: 'HypERC721Collateral',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.HypERC721Collateral__factory>;
    getContractFactory(
      name: 'HypNative',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.HypNative__factory>;
    getContractFactory(
      name: 'TokenRouter',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.TokenRouter__factory>;
    getContractFactory(
      name: 'ERC20Test',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20Test__factory>;
    getContractFactory(
      name: 'ERC721Test',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC721Test__factory>;

    getContractAt(
      name: 'GasRouter',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.GasRouter>;
    getContractAt(
      name: 'HyperlaneConnectionClient',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.HyperlaneConnectionClient>;
    getContractAt(
      name: 'IHyperlaneConnectionClient',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IHyperlaneConnectionClient>;
    getContractAt(
      name: 'IInterchainGasPaymaster',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IInterchainGasPaymaster>;
    getContractAt(
      name: 'IInterchainSecurityModule',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IInterchainSecurityModule>;
    getContractAt(
      name: 'ISpecifiesInterchainSecurityModule',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ISpecifiesInterchainSecurityModule>;
    getContractAt(
      name: 'IMailbox',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IMailbox>;
    getContractAt(
      name: 'IMessageRecipient',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IMessageRecipient>;
    getContractAt(
      name: 'Router',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.Router>;
    getContractAt(
      name: 'OwnableUpgradeable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: 'Initializable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: 'ERC20Upgradeable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20Upgradeable>;
    getContractAt(
      name: 'IERC20MetadataUpgradeable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC20MetadataUpgradeable>;
    getContractAt(
      name: 'IERC20Upgradeable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC20Upgradeable>;
    getContractAt(
      name: 'ERC721Upgradeable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC721Upgradeable>;
    getContractAt(
      name: 'ERC721EnumerableUpgradeable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC721EnumerableUpgradeable>;
    getContractAt(
      name: 'ERC721URIStorageUpgradeable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC721URIStorageUpgradeable>;
    getContractAt(
      name: 'IERC721EnumerableUpgradeable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC721EnumerableUpgradeable>;
    getContractAt(
      name: 'IERC721MetadataUpgradeable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    getContractAt(
      name: 'IERC721ReceiverUpgradeable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    getContractAt(
      name: 'IERC721Upgradeable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC721Upgradeable>;
    getContractAt(
      name: 'ContextUpgradeable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: 'ERC165Upgradeable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: 'IERC165Upgradeable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: 'ERC20',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: 'IERC20Permit',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: 'IERC20Metadata',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: 'IERC20',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: 'ERC721',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: 'ERC721Enumerable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: 'IERC721Enumerable',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: 'IERC721Metadata',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: 'IERC721',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: 'IERC721Receiver',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: 'ERC165',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: 'IERC165',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: 'HypERC721URICollateral',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.HypERC721URICollateral>;
    getContractAt(
      name: 'HypERC721URIStorage',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.HypERC721URIStorage>;
    getContractAt(
      name: 'HypERC20',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.HypERC20>;
    getContractAt(
      name: 'HypERC20Collateral',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.HypERC20Collateral>;
    getContractAt(
      name: 'HypERC721',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.HypERC721>;
    getContractAt(
      name: 'HypERC721Collateral',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.HypERC721Collateral>;
    getContractAt(
      name: 'HypNative',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.HypNative>;
    getContractAt(
      name: 'TokenRouter',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.TokenRouter>;
    getContractAt(
      name: 'ERC20Test',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20Test>;
    getContractAt(
      name: 'ERC721Test',
      address: string,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC721Test>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer,
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer,
    ): Promise<ethers.Contract>;
  }
}
