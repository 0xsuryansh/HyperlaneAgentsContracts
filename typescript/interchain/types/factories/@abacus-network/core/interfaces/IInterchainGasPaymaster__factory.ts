/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider } from '@ethersproject/providers';
import { Contract, Signer, utils } from 'ethers';

import type {
  IInterchainGasPaymaster,
  IInterchainGasPaymasterInterface,
} from '../../../../@abacus-network/core/interfaces/IInterchainGasPaymaster';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_outbox',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_leafIndex',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_destinationDomain',
        type: 'uint32',
      },
    ],
    name: 'payGasFor',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
];

export class IInterchainGasPaymaster__factory {
  static readonly abi = _abi;
  static createInterface(): IInterchainGasPaymasterInterface {
    return new utils.Interface(_abi) as IInterchainGasPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): IInterchainGasPaymaster {
    return new Contract(
      address,
      _abi,
      signerOrProvider,
    ) as IInterchainGasPaymaster;
  }
}
