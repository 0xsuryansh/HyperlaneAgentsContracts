/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers';

import type {
  OwnableMulticall,
  OwnableMulticallInterface,
} from '../../contracts/OwnableMulticall';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct Call[]',
        name: 'calls',
        type: 'tuple[]',
      },
    ],
    name: 'proxyCalls',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506100203361002560201b60201c565b6100eb565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6108f6806100fa6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a61461005157806388b755141461005b5780638da5cb5b14610077578063f2fde38b14610095575b600080fd5b6100596100b1565b005b61007560048036038101906100709190610521565b610139565b005b61007f6102c3565b60405161008c91906105af565b60405180910390f35b6100af60048036038101906100aa91906105f6565b6102ed565b005b6100b96103e4565b73ffffffffffffffffffffffffffffffffffffffff166100d76102c3565b73ffffffffffffffffffffffffffffffffffffffff161461012d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012490610680565b60405180910390fd5b61013760006103ec565b565b6101416103e4565b73ffffffffffffffffffffffffffffffffffffffff1661015f6102c3565b73ffffffffffffffffffffffffffffffffffffffff16146101b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ac90610680565b60405180910390fd5b60005b828290508110156102be576000808484848181106101d9576101d86106a0565b5b90506020028101906101eb91906106de565b60000160208101906101fd91906105f6565b73ffffffffffffffffffffffffffffffffffffffff16858585818110610226576102256106a0565b5b905060200281019061023891906106de565b80602001906102479190610706565b6040516102559291906107a8565b6000604051808303816000865af19150503d8060008114610292576040519150601f19603f3d011682016040523d82523d6000602084013e610297565b606091505b5091509150816102a8578060208201fd5b50506001816102b791906107fa565b90506101b8565b505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102f56103e4565b73ffffffffffffffffffffffffffffffffffffffff166103136102c3565b73ffffffffffffffffffffffffffffffffffffffff1614610369576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036090610680565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cf906108a0565b60405180910390fd5b6103e1816103ec565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126104e1576104e06104bc565b5b8235905067ffffffffffffffff8111156104fe576104fd6104c1565b5b60208301915083602082028301111561051a576105196104c6565b5b9250929050565b60008060208385031215610538576105376104b2565b5b600083013567ffffffffffffffff811115610556576105556104b7565b5b610562858286016104cb565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105998261056e565b9050919050565b6105a98161058e565b82525050565b60006020820190506105c460008301846105a0565b92915050565b6105d38161058e565b81146105de57600080fd5b50565b6000813590506105f0816105ca565b92915050565b60006020828403121561060c5761060b6104b2565b5b600061061a848285016105e1565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061066a602083610623565b915061067582610634565b602082019050919050565b600060208201905081810360008301526106998161065d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b6000823560016040038336030381126106fa576106f96106cf565b5b80830191505092915050565b60008083356001602003843603038112610723576107226106cf565b5b80840192508235915067ffffffffffffffff821115610745576107446106d4565b5b602083019250600182023603831315610761576107606106d9565b5b509250929050565b600081905092915050565b82818337600083830152505050565b600061078f8385610769565b935061079c838584610774565b82840190509392505050565b60006107b5828486610783565b91508190509392505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610805826107c1565b9150610810836107c1565b9250828201905080821115610828576108276107cb565b5b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061088a602683610623565b91506108958261082e565b604082019050919050565b600060208201905081810360008301526108b98161087d565b905091905056fea26469706673582212200ab85fa8141edaed0a12867f4604544d951bc4577feacff6a5276148e9a149bd64736f6c63430008100033';

type OwnableMulticallConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnableMulticallConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnableMulticall__factory extends ContractFactory {
  constructor(...args: OwnableMulticallConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<OwnableMulticall> {
    return super.deploy(overrides || {}) as Promise<OwnableMulticall>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OwnableMulticall {
    return super.attach(address) as OwnableMulticall;
  }
  override connect(signer: Signer): OwnableMulticall__factory {
    return super.connect(signer) as OwnableMulticall__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnableMulticallInterface {
    return new utils.Interface(_abi) as OwnableMulticallInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): OwnableMulticall {
    return new Contract(address, _abi, signerOrProvider) as OwnableMulticall;
  }
}
