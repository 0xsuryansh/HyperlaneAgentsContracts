Subject: [PATCH] Display for OptionalNonZeroEncryptionPubkey
Display for OptionalNonZeroPubkey
---
Index: token/program-2022/src/pod.rs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/token/program-2022/src/pod.rs b/token/program-2022/src/pod.rs
--- a/token/program-2022/src/pod.rs	(revision 163eadfd01a47ab8b353b398cad872bf28160c6b)
+++ b/token/program-2022/src/pod.rs	(revision 0332f0dbd14ab07e27a2956ec9ee7dcbdbdec9c5)
@@ -3,7 +3,7 @@
     bytemuck::{Pod, Zeroable},
     solana_program::{program_error::ProgramError, program_option::COption, pubkey::Pubkey},
     solana_zk_token_sdk::zk_token_elgamal::pod,
-    std::convert::TryFrom,
+    std::fmt,
 };

 /// A Pubkey that encodes `None` as all `0`, meant to be usable as a Pod type,
@@ -11,6 +11,15 @@
 #[derive(Clone, Copy, Debug, Default, PartialEq, Pod, Zeroable)]
 #[repr(transparent)]
 pub struct OptionalNonZeroPubkey(Pubkey);
+impl fmt::Display for OptionalNonZeroPubkey {
+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
+        if self.0.as_ref().iter().all(|&b| b == 0) {
+            write!(f, "None")
+        } else {
+            write!(f, "{}", self.0)
+        }
+    }
+}
 impl TryFrom<Option<Pubkey>> for OptionalNonZeroPubkey {
     type Error = ProgramError;
     fn try_from(p: Option<Pubkey>) -> Result<Self, Self::Error> {
@@ -66,6 +75,15 @@
 #[derive(Clone, Copy, Debug, Default, PartialEq, Pod, Zeroable)]
 #[repr(transparent)]
 pub struct OptionalNonZeroEncryptionPubkey(EncryptionPubkey);
+impl fmt::Display for OptionalNonZeroEncryptionPubkey {
+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
+        if self.0 .0.iter().all(|&b| b == 0) {
+            write!(f, "None")
+        } else {
+            write!(f, "{}", self.0)
+        }
+    }
+}
 impl OptionalNonZeroEncryptionPubkey {
     /// Checks equality between an OptionalNonZeroEncryptionPubkey and an EncryptionPubkey when
     /// interpreted as bytes.
