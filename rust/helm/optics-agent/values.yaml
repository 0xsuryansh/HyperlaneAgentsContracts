image:
  repository: gcr.io/clabs-optics/optics-agent
  pullPolicy: Always
  tag: staging-community

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}
podCommonLabels: {}

storage:
  storageClass: "standard"
  accessModes: ReadWriteOnce

# -- Optics Overrides
# By Default, Optics Agents load the config baked into the Docker Image
# Pass values here in order to override the values in the config
# Note: For successful operation, one _must_ pass signer keys as
#       they are not baked into the image for security reasons.
optics:
  # Sets the config folder to use
  runEnv: "staging-community"
  # Sets the base config to be used (switch between Homes)
  baseConfig: "kovan_config.json"
  # Set the DB location to be the volume
  dbPath: /usr/share/optics
  rustBacktrace: full
  tracing:
    # Set the log formatting
    format: json
    # Set the log level
    level: info
    uri: ""
  metrics: 
    port: 9090
  homeChain:
    name: "kovan"
    # -- The contract address for the home contract
    address: # "0x0C473afC0cabd469751CBE3Ac08aBac3e40bF586"
    # -- The hard-coded domain corresponding to this blockchain
    domain: # 1000
    # -- RPC Style
    rpcStyle: # "ethereum"
    connectionType: # "http"
    # -- Connection string pointing to an RPC endpoint for the home chain
    connectionUrl: "https://kovan.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161" # "https://kovan.infura.io/v3/<KEY>"
  aws:
    accessKeyId: "AKIATRTUR2LSGMB3RXEK"
    secretAccessKey: "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"

  # -- Replica chain overrides, a sequence
  replicaChains:
    - name: "alfajores"
      # -- The contract address for the replica contract
      address: # "0x0C473afC0cabd469751CBE3Ac08aBac3e40bF586"
      domain: # 1000
      rpcStyle: # "ethereum"
      connectionType: # "http"
      # -- Connection string pointing to an RPC endpoint for the replica chain
      connectionUrl: "https://alfajores-forno.celo-testnet.org"
    - name: "gorli"
      connectionUrl: "https://rpc.goerli.mudit.blog/"
    - name: ropsten
      connectionUrl: "https://ropsten.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161"

  # Optics Agent Roles
  # Individually Switchable via <role>.enabled
  updater:
    enabled: true
    podAnnotations: {}
    podLabels: {}
    storage:
      size: 10Gi
      snapshot:
        enabled: false
        name: ""
    resources: {}
    # -- Transaction Signing keys for home and replica(s)
    transactionSigners:
      - name: "kovan"
        aws:
          keyId: "alias/staging-community-kovan-updater-attestation"
          region: "us-west-2"
      - name: "alfajores"
        aws:
          keyId: "alias/staging-community-kovan-updater-attestation"
          region: "us-west-2"
      - name: "gorli"
        aws:
          keyId: "alias/staging-community-kovan-updater-attestation"
          region: "us-west-2"
      - name: "ropsten"
        aws:
          keyId: "alias/staging-community-kovan-updater-attestation"
          region: "us-west-2"
    # -- Specialized key used by updater and watcher used to sign attestations, separate from updater.transactionSigners
    attestationSigner:
      aws:
        keyId: "alias/staging-community-kovan-updater-signer"
        region: "us-west-2"
    # -- How long to wait between checking for updates
    pollingInterval: 5 # 5
    updatePause: 15 # 15

  relayer:
    enabled: true
    podAnnotations: {}
    podLabels: {}
    storage:
      size: 10Gi
      snapshot:
        enabled: false
        name: ""
    resources: {}
    transactionSigners:
      - name: "kovan"
        aws:
          keyId: "alias/staging-community-kovan-relayer-signer"
          region: "us-west-2"
      - name: "alfajores"
        aws:
          keyId: "alias/staging-community-kovan-relayer-signer"
          region: "us-west-2"
      - name: "ropsten"
        aws:
          keyId: "alias/staging-community-kovan-relayer-signer"
          region: "us-west-2"
      - name: "gorli"
        aws:
          keyId: "alias/staging-community-kovan-relayer-signer"
          region: "us-west-2"
    pollingInterval: # 10

  processor:
    enabled: true
    podAnnotations: {}
    podLabels: {}
    storage:
      size: 10Gi
      snapshot:
        enabled: false
        name: ""
    resources: {}
    transactionSigners:
      - name: "kovan"
        aws:
          keyId: "alias/staging-community-kovan-processor-signer"
          region: "us-west-2"
      - name: "alfajores"
        aws:
          keyId: "alias/staging-community-kovan-processor-signer"
          region: "us-west-2"
      - name: "ropsten"
        aws:
          keyId: "alias/staging-community-kovan-processor-signer"
          region: "us-west-2"
      - name: "gorli"
        aws:
          keyId: "alias/staging-community-kovan-processor-signer"
          region: "us-west-2"
    pollingInterval: # 10

  kathy:
    enabled: false
    podAnnotations: {}
    podLabels: {}
    storage:
      size: 10Gi
      snapshot:
        enabled: false
        name: ""
    resources: {}
    transactionSigners:
      - name: "kovan"
        hexKey: ""
        aws:
          keyId: ""
          region: "us-west-2"
      - name: "alfajores"
        hexKey: ""
        aws:
          keyId: ""
          region: "us-west-2"
    # Polling Interval Override
    messageInterval: # 100
    # -- Configuration for Kathy's message generation code
    chatGenConfig:
      destination: # 2000
      message: # "hello are you listening?"
      recipient: # "recipient"
      type: # "static"

podSecurityContext:
  fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
